# Generated by Django 3.1.7 on 2021-05-10 00:12

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Proddisplay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productname', models.CharField(max_length=100)),
                ('img', models.ImageField(default='profile1.png', upload_to='pics')),
                ('desc', models.TextField()),
                ('price', models.IntegerField()),
                ('offer', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('keyfeatures', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='products')),
                ('marked_price', models.PositiveIntegerField()),
                ('selling_price', models.PositiveIntegerField()),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('warranty', models.CharField(blank=True, max_length=300, null=True)),
                ('return_policy', models.CharField(blank=True, max_length=300, null=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('offer', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date published')),
                ('brand', models.CharField(blank=True, max_length=100, null=True)),
                ('uom', models.CharField(choices=[('Case', 'Case'), ('Centimeter', 'Centimeter'), ('Chain', 'Chain'), ('Cubic Centimeter', 'Cubic Centimeter'), ('Cubic Foot', 'Cubic Foot'), ('Cubic Inch', 'Cubic Inch'), ('Cubic Meter', 'Cubic Meter'), ('Cubic Yard', 'Cubic Yard'), ('DEGREES Celsius', 'DEGREES Celsius'), ('Degrees Fahrenheit', 'Degrees Fahrenheit'), ('Dozen', 'Dozen'), ('Dram', 'Dram'), ('Fluid Ounce', 'Fluid Ounce'), ('Foot', 'Foot'), ('Forty-Foot Container ', 'Forty-Foot Container'), ('Furlong', 'Furlong'), ('Gallon', 'Gallon'), ('Gill', 'Gill'), ('Grain', 'Grain'), ('Gram', 'Gram'), ('Gross', 'Gross'), ('Hectare', 'Hectare'), ('Hertz', 'Hertz'), ('Inch', 'Inch'), ('Kiloampere', 'Kiloampere'), ('Kilogram', 'Kilogram'), ('Kilohertz', 'Kilohertz'), ('Kilometer', 'Kilometer'), ('Kiloohm', 'Kiloohm'), ('Kilovolt', 'Kilovolt'), ('Kilowatt', 'Kilowatt'), ('Liter', 'Liter'), ('Long Ton', 'Long Ton'), ('Megahertz', 'Megahertz'), ('Meter', 'Meter'), ('Metric Ton', 'Metric Ton'), ('Mile', 'Mile'), ('Milliampere', 'Milliampere'), ('Milligram', 'Milligram'), ('Millihertz', 'Millihertz'), ('Milliliter', 'Milliliter'), ('Millimeter', 'Millimeter'), ('Milliohm', 'Milliohm'), ('Millivolt', 'Millivolt'), ('Milliwatt', 'Milliwatt'), ('Nautical Mile', 'Nautical Mile'), ('Ohm', 'Ohm'), ('Ounce', 'Ounce'), ('Pack', 'Pack'), ('Pallet', 'Pallet'), ('Pair', 'Pair'), ('Parcel', 'Parcel'), ('Perch', 'Perch'), ('Piece', 'Piece'), ('Pint', 'Pint'), ('Plant', 'Plant'), ('Pole', 'Pole'), ('Pound', 'Pound'), ('Quart', 'Quart'), ('Quarter', 'Quarter'), ('Rod', 'Rod'), ('Roll', 'Roll'), ('Set', 'Set'), ('Sheet', 'Sheet'), ('Short Ton', 'Short Ton'), ('Square Centimeter', 'Square Centimeter'), ('Square Foot', 'Square Foot'), ('Square Inch', 'Square Inch'), ('Square Meter', 'Square Meter'), ('Square Mile', 'Square Mile'), ('Square Yard', 'Square Yard'), ('Stone', 'Stone'), ('Strand', 'Strand'), ('Ton', 'Ton'), ('Tonne', 'Tonne'), ('Tray', 'Tray'), ('Twenty-Foot Container', 'Twenty-Foot Container'), ('Unit', 'Unit'), ('Volt', 'Volt'), ('Watt', 'Watt'), ('Wp', 'Wp'), ('Yard', 'Yard')], default='nos', max_length=200)),
                ('noofpacksinonecartoon', models.PositiveIntegerField(default=0)),
                ('moq', models.PositiveIntegerField(default=0)),
                ('storagetemp', models.CharField(blank=True, max_length=100, null=True)),
                ('shelflife', models.CharField(blank=True, max_length=100, null=True)),
                ('rating', models.PositiveIntegerField(default=0)),
                ('status', models.IntegerField(choices=[(0, 'Draft'), (1, 'Publish'), (2, 'Hold')], default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buyerseller.category')),
            ],
        ),
        migrations.CreateModel(
            name='Rfq',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('industry', models.CharField(choices=[('AGRICULTURE', 'Agriculture'), ('APPAREL', 'Apparel'), ('AUTOMOBILES & MOTORCYCLES', 'Automobiles & Motorcycles'), ('BEAUTY & PERSONAL CARE', 'Beauty & Personal Care'), ('CHEMICALS', 'Chemicals'), ('COMPUTER HARDWARE & SOFTWARE', 'Computer Hardware & Software'), ('CONSTRUCTION & REAL ESTATE', 'Construction & Real Estate'), ('CONSUMER ELECTRONICS', 'Consumer Electronics'), ('ELECTRICAL EQUIPMENT SUPPLIES', 'Electrical Equipment Supplies'), ('ENERGY', 'Energy'), ('ENVIRONMENT', 'Environment'), ('FASHION ACCESSORIES', 'Fashion Accessories'), ('FOOD & BEVERAGE', 'Food & Beverage'), ('FURNITURE', 'Furniture'), ('GIFTS & CRAFTS', 'Gifts & Crafts'), ('HARDWARE', 'Hardware'), ('HEALTH & MEDICAL', 'Health & Medical'), ('HOME & GARDEN', 'Home & Garden'), ('HOME APPLIANCES', 'Home Appliances'), ('INDUSTRIAL PARTS & FABRICATION SERVICES', 'Industrial Parts & Fabrication Services'), ('LIGHTS & LIGHTING', 'Lights & Lighting'), ('LUGGAGE, BAGS & CASES', 'Luggage, Bags & Cases'), ('MACHINERY', 'Machinery'), ('MEASUREMENT & ANALYSIS INSTRUMENTS', 'Measurement & Analysis'), ('MINERALS & METALLURGY', 'Minerals & Metallurgy'), ('MULTIPLE PRODUCTS', 'Multiple Products'), ('OFFICE & SCHOOL SUPPLIES', 'Office & School Supplies'), ('PACKING & PRINTING', 'Packing & Printing'), ('RUBBER & PLASTICS', 'rubber & Plastics'), ('SECURITY & PROTECTION', 'Security & Protection'), ('SERVICE EQUIPMENT', 'Service Equipment'), ('SHOES & FOOTWEAR ACCESSORIES', 'Shoes & Footwear Accessories'), ('SPORTS & ENTERTAINMENT', 'Sports & Entertainment'), ('TELECOMMUNICATION', 'Telecommunication'), ('TEXTILE & LEATHER PRODUCT', 'Textile & Leather Product'), ('TIMEPIECES, JEWELRY , EYEWEAR', 'Timepieces, Jewelry , Eyewear'), ('TOOLS', 'Tools'), ('TOYS & HOBBIES', 'Toys & Hobbies'), ('TRANSPORTATION', 'Transportation')], default='APPAREL', max_length=100)),
                ('buyer_need', models.CharField(max_length=250)),
                ('keywords', models.CharField(max_length=200)),
                ('content', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('qty_required', models.CharField(max_length=200)),
                ('uom', models.CharField(choices=[('Case', 'Case'), ('Centimeter', 'Centimeter'), ('Chain', 'Chain'), ('Cubic Centimeter', 'Cubic Centimeter'), ('Cubic Foot', 'Cubic Foot'), ('Cubic Inch', 'Cubic Inch'), ('Cubic Meter', 'Cubic Meter'), ('Cubic Yard', 'Cubic Yard'), ('DEGREES Celsius', 'DEGREES Celsius'), ('Degrees Fahrenheit', 'Degrees Fahrenheit'), ('Dozen', 'Dozen'), ('Dram', 'Dram'), ('Fluid Ounce', 'Fluid Ounce'), ('Foot', 'Foot'), ('Forty-Foot Container ', 'Forty-Foot Container'), ('Furlong', 'Furlong'), ('Gallon', 'Gallon'), ('Gill', 'Gill'), ('Grain', 'Grain'), ('Gram', 'Gram'), ('Gross', 'Gross'), ('Hectare', 'Hectare'), ('Hertz', 'Hertz'), ('Inch', 'Inch'), ('Kiloampere', 'Kiloampere'), ('Kilogram', 'Kilogram'), ('Kilohertz', 'Kilohertz'), ('Kilometer', 'Kilometer'), ('Kiloohm', 'Kiloohm'), ('Kilovolt', 'Kilovolt'), ('Kilowatt', 'Kilowatt'), ('Liter', 'Liter'), ('Long Ton', 'Long Ton'), ('Megahertz', 'Megahertz'), ('Meter', 'Meter'), ('Metric Ton', 'Metric Ton'), ('Mile', 'Mile'), ('Milliampere', 'Milliampere'), ('Milligram', 'Milligram'), ('Millihertz', 'Millihertz'), ('Milliliter', 'Milliliter'), ('Millimeter', 'Millimeter'), ('Milliohm', 'Milliohm'), ('Millivolt', 'Millivolt'), ('Milliwatt', 'Milliwatt'), ('Nautical Mile', 'Nautical Mile'), ('Ohm', 'Ohm'), ('Ounce', 'Ounce'), ('Pack', 'Pack'), ('Pallet', 'Pallet'), ('Pair', 'Pair'), ('Parcel', 'Parcel'), ('Perch', 'Perch'), ('Piece', 'Piece'), ('Pint', 'Pint'), ('Plant', 'Plant'), ('Pole', 'Pole'), ('Pound', 'Pound'), ('Quart', 'Quart'), ('Quarter', 'Quarter'), ('Rod', 'Rod'), ('Roll', 'Roll'), ('Set', 'Set'), ('Sheet', 'Sheet'), ('Short Ton', 'Short Ton'), ('Square Centimeter', 'Square Centimeter'), ('Square Foot', 'Square Foot'), ('Square Inch', 'Square Inch'), ('Square Meter', 'Square Meter'), ('Square Mile', 'Square Mile'), ('Square Yard', 'Square Yard'), ('Stone', 'Stone'), ('Strand', 'Strand'), ('Ton', 'Ton'), ('Tonne', 'Tonne'), ('Tray', 'Tray'), ('Twenty-Foot Container', 'Twenty-Foot Container'), ('Unit', 'Unit'), ('Volt', 'Volt'), ('Watt', 'Watt'), ('Wp', 'Wp'), ('Yard', 'Yard')], max_length=200)),
                ('buying_frequency', models.CharField(choices=[('one time', 'One time'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('semi annually', 'Semi Annually'), ('annually', 'Annually'), ('others', 'Others')], max_length=200)),
                ('image', models.ImageField(default='profile1.png', upload_to='pics')),
                ('payment_mode', models.CharField(choices=[('t/t', 'T/T'), ('l/c', 'L/C'), ('d/a', 'D/A'), ('d/p', 'D/P'), ('western union', 'WESTERN UNION'), ('money gram', 'Money Gram'), ('paypal', 'PayPal'), ('others', 'OTHERS')], max_length=200)),
                ('destination_port', models.CharField(max_length=200)),
                ('time_validity', models.CharField(choices=[('1 week', '1 Week'), ('2 week', '2 Week'), ('3 week', '3 Week'), ('1 month', '1 Month'), ('2 month', '2 Month'), ('3 month', '3 Month'), ('4 month', '4 Month'), ('5 month', '5 Month'), ('6 month', '6 Month'), ('1 year', '1 Year')], max_length=200)),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='date published')),
                ('status', models.IntegerField(choices=[(0, 'Draft'), (1, 'Publish'), (2, 'Hold')], default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rfq', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='RfqImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/images/')),
                ('rfq', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buyerseller.rfq')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/images/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buyerseller.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProdComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('mobile', models.CharField(max_length=80)),
                ('email', models.EmailField(max_length=254)),
                ('body', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prodcomment', to='buyerseller.product')),
            ],
            options={
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered_by', models.CharField(max_length=200)),
                ('shipping_address', models.CharField(max_length=200)),
                ('mobile', models.CharField(max_length=10)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('subtotal', models.PositiveIntegerField()),
                ('discount', models.PositiveIntegerField()),
                ('total', models.PositiveIntegerField()),
                ('order_status', models.CharField(choices=[('Order Received', 'Order Received'), ('Order Processing', 'Order Processing'), ('On the way', 'On the way'), ('Order Completed', 'Order Completed'), ('Order Canceled', 'Order Canceled')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('payment_method', models.CharField(choices=[('Cash On Delivery', 'Cash On Delivery'), ('Khalti', 'Khalti'), ('Esewa', 'Esewa')], default='Cash On Delivery', max_length=20)),
                ('payment_completed', models.BooleanField(blank=True, default=False, null=True)),
                ('cart', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='buyerseller.cart')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(default='123456789', max_length=200)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('joined_on', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CartProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.PositiveIntegerField()),
                ('quantity', models.PositiveIntegerField()),
                ('subtotal', models.PositiveIntegerField()),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buyerseller.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buyerseller.product')),
            ],
        ),
        migrations.AddField(
            model_name='cart',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='buyerseller.customer'),
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='admins')),
                ('mobile', models.CharField(max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
